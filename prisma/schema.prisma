generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cars {
  id           Int       @id @default(autoincrement())
  manufacture  String?   @db.VarChar
  type         String?   @db.VarChar
  license_no   String?   @db.VarChar
  seat         Int?
  baggage      Int?
  transmission String?   @db.VarChar
  year         String?   @db.VarChar
  name         String?   @db.VarChar
  description  String?
  is_driver    Boolean?
  is_available Boolean?  @default(true)
  image        String?
  price        Int?
  created_dt   DateTime? @default(now()) @db.Timestamp(6)
  updated_dt   DateTime? @updatedAt //diubah dari @db.Timestamp(6) ke @updatedAt agar auto update
  created_by   String?   @db.VarChar
  updated_by   String?   @db.VarChar
  order        order[]
}

model order {
  id         Int       @id @default(autoincrement())
  order_no   String    @unique @db.VarChar
  user_id    Int
  car_id     Int
  start_time DateTime? @db.Timestamp(6)
  end_time   DateTime? @db.Timestamp(6)
  total      Float?
  is_driver  Boolean?
  is_expired Boolean?
  status     String?   @db.VarChar
  created_dt DateTime? @default(now()) @db.Timestamp(6)
  updated_dt DateTime? @updatedAt //diubah dari @db.Timestamp(6) ke @updatedAt agar auto update
  created_by String?   @db.VarChar
  updated_by String?   @db.VarChar
  cars       cars?     @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id             Int       @id @default(autoincrement())
  full_name      String?   @db.VarChar
  email          String    @unique @db.VarChar(30)
  password       String    @db.VarChar
  role           String    @db.VarChar
  address        String?   @db.VarChar
  gender         String?   @db.VarChar
  avatar         String?   @db.VarChar
  phone_number   String?   @unique @db.VarChar
  driver_license String?
  birthdate      String?
  created_dt     DateTime? @default(now()) @db.Timestamp(6)
  updated_dt     DateTime? @updatedAt //diubah dari @db.Timestamp(6) ke @updatedAt agar auto update
  created_by     String?   @db.VarChar
  updated_by     String?   @db.VarChar
  order          order[]
}

// model roles {
//   id          Int           @id @default(autoincrement())
//   role        String
//   created_at  DateTime?     @default(now()) @db.Timestamp(6)
//   updated_at  DateTime?     @updatedAt
//   created_by  String?       @db.VarChar
//   updated_by  String?       @db.VarChar
//   menu_access menu_access[]
// }

// model features_access {
//   id             Int         @id @default(autoincrement())
//   menu_access_id Int
//   features_id    Int
//   visible        Boolean
//   created_at     DateTime
//   updated_at     DateTime
//   created_by     String
//   updated_by     String
//   menu_access    menu_access @relation(fields: [menu_access_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
//   menu           menu        @relation(fields: [features_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
// }

// model menu {
//   id              Int               @id @default(autoincrement())
//   name            String
//   route           String
//   created_at      DateTime
//   updated_at      DateTime
//   created_by      String
//   updated_by      String
//   features_access features_access[]
//   menu_features   menu_features[]
//   menu_access     menu_access[]
// }

// model menu_features {
//   id         Int      @id @default(autoincrement())
//   menu_id    Int
//   name       String
//   route      String
//   created_at DateTime
//   updated_at DateTime
//   created_by String
//   updated_by String
//   menu       menu     @relation(fields: [menu_id], references: [id])
// }

// model menu_access {
//   id              Int               @id @default(autoincrement())
//   role_id         Int
//   menu_id         Int
//   visible         Boolean
//   created_at      DateTime?         @default(now()) @db.Timestamp(6)
//   updated_at      DateTime?         @updatedAt
//   created_by      String?           @db.VarChar
//   updated_by      String?           @db.VarChar
//   roles           roles             @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
//   menu            menu              @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
//   features_access features_access[]
// }

// model promos {
//   id         Int      @id @default(autoincrement())
//   name       String
//   discount   Float
//   created_at DateTime
//   updated_at DateTime
//   created_by String
//   updated_by String
// }
